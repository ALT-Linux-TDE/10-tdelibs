dnl KDE JavaScript specific configure tests

AC_CHECK_HEADERS(ieeefp.h float.h)

AC_DEFUN(AC_CHECK_PCRE2POSIX],
[
  dnl define the configure option that disables pcre2
  AC_ARG_ENABLE(pcre2,AC_HELP_STRING([--disable-pcre],[don't require libpcre (poor RegExp support in Javascript)]),
      with_pcre2=$enableval, with_pcre2=yes)

 if test "$with_pcre2" = "yes"; then

    KDE_FIND_PATH(pcre2-config, PCRE2_CONFIG, [${exec_prefix}/bin ${prefix}/bin], [PCRE2_CONFIG="" ])
    if test -n "$PCRE2_CONFIG" && $PCRE2_CONFIG --libs8 >/dev/null 2>&1; then
        LIBPCRE2=`$PCRE2_CONFIG --libs-posix | sed -e "s,-L/usr/lib ,," -e "s,[\b-].\+pcreposix[^[:space:]]*\b,,"`
        PCRE2CFLAGS=`$PCRE2_CONFIG --cflags`
    else
        LIBPCRE2="-lpcre2-8"
        PCRE2CFLAGS=
    fi
    AC_CACHE_VAL(ac_cv_have_pcre2posix, [
      ac_save_libs="$LIBS"
      LIBS="$LIBPCRE2"
      ac_CPPFLAGS_save="$CPPFLAGS"
      CPPFLAGS="$CPPFLAGS $PCRE2CFLAGS $all_includes"
      ac_LDFLAGS_save="$LDFLAGS"
      LDFLAGS="$LDFLAGS $all_libraries"
      AC_TRY_LINK(
         [
          #define PCRE2_CODE_UNIT_WIDTH 8
          #include <pcre2.h>
         ],
         [pcre2_regfree(0);],
         [ac_cv_have_pcre2posix="yes"],
         [ac_cv_have_pcre2posix="no"]
      )
      LIBS="$ac_save_libs"
      LDFLAGS="$ac_LDFLAGS_save"
      CPPFLAGS="$ac_CPPFLAGS_save"
    ])
    if test "$ac_cv_have_pcre2posix" = "yes"; then
        AC_DEFINE(HAVE_PCRE2POSIX, 1, [Define if you have pcre2posix libraries and header files.])
    else
        AC_MSG_ERROR([You're missing libpcre.
Download libpcre2 from http://www.pcre.org or find a binary package for your platform.
Alternatively, you can specify --disable-pcre, but some web pages - using regular
expressions in Javascript code - will not work correctly, the regexp support being
quite limited if libpcre isn't present.])
    fi
  fi
])
AC_CHECK_PCRE2POSIX
AC_SUBST(LIBPCRE2)
AC_SUBST(PCRE2CFLAGS)

AM_CONFIG_HEADER([kjs/global.h])
